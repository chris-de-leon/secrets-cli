name: Validate and Release

on:
  push:
    branches:
      - master

permissions:
  contents: write # grant permissions to create releases

jobs:
  validate:
    name: Validate
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v31
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Lint
        run: nix develop .#dev --command bash -c 'make check'

      - name: Test
        run: nix develop --command secrets version

  release:
    name: Release
    needs: validate
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check Version
        id: check_version
        run: |
          set -euo pipefail

          echo "info: checking if VERSION file exists"
          if [ ! -f VERSION ]; then
            echo "info: VERSION file does not exist - skipping release"
            echo "changed=false" >> "${GITHUB_OUTPUT}"
            exit 0
          else
            echo "info: VERSION file exists"
          fi

          echo "info: checking if any tags exist"
          if [ "$(git tag | wc -l)" -eq 0 ]; then
            echo "info: first release detected - proceeding"
            echo "changed=true" >> "${GITHUB_OUTPUT}"
            exit 0
          else
            echo "info: tags exist"
          fi

          echo "info: checking for new version"
          CURR_VERSION="$(git describe --tags --abbrev=0 | sed 's/^v//')"
          NEXT_VERSION="$(cat VERSION | sed 's/^v//')"
          if [ "${NEXT_VERSION}" == "${CURR_VERSION}" ]; then
            echo "info: version has not changed - skipping release"
            echo "changed=false" >> "${GITHUB_OUTPUT}"
            exit 0
          else
            echo "info: potentially new version detected"
          fi

          echo "info: checking if version ${NEXT_VERSION} already exists"
          if [ -z "$(git tag -l "v${NEXT_VERSION}")" ]; then
            echo "info: version ${NEXT_VERSION} is available ✅"
            echo "version=${NEXT_VERSION}" >> "${GITHUB_OUTPUT}"
            echo "changed=true" >> "${GITHUB_OUTPUT}"
            exit 0
          else
            echo "error: version ${NEXT_VERSION} already exists ❌"
            echo "version=${NEXT_VERSION}" >> "${GITHUB_OUTPUT}"
            echo "changed=false" >> "${GITHUB_OUTPUT}"
            exit 1
          fi

      - name: Release
        if: steps.check_version.outputs.changed == 'true'
        uses: softprops/action-gh-release@v2
        with:
          name: "Release v${{ steps.check_version.outputs.version }}"
          tag_name: "v${{ steps.check_version.outputs.version }}"
          token: "${{ secrets.GITHUB_TOKEN }}"
          generate_release_notes: true
          make_latest: true
          prerelease: false
          draft: false
